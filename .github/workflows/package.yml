name: Package
env:
  PIP_CACHE_DIR: .pip
  PYTHONPATH: src
on:
  release:
    types: ["published"]
  workflow_dispatch: {}
jobs:
  build-sdist:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set Up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Upgrade Pip
        run: python -m pip install --upgrade pip

      - name: Upgrade Build
        run: pip install --upgrade build

      - name: Install Python Dependencies
        run: pip install -IU -e .[build]

      - name: Build sdist
        run: ./tools/build/build-sdist.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build-linux-amd64:
    runs-on: ubuntu-24.04
    needs: build-sdist
    strategy:
      fail-fast: true
      matrix:
        image:
          - manylinux2014_x86_64
          - manylinux_2_28_x86_64
          - musllinux_1_2_x86_64
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Build wheels
        run: ./tools/build/build-linux.sh ${{matrix.image}}

      - name: Save Artefacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel-linux-amd64-${{matrix.image}}
          path: wheelhouse/*.whl

  build-linux-aarch64:
    runs-on: ubuntu-24.04-arm
    needs: build-sdist
    strategy:
      fail-fast: true
      matrix:
        image:
          - manylinux_2_28_aarch64
          - musllinux_1_2_aarch64
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Build wheels
        run: ./tools/build/build-linux.sh ${{matrix.image}}

      - name: Save Artefacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel-linux-aarch64-${{matrix.image}}
          path: wheelhouse/*.whl

  build-darwin-arm64:
    runs-on: macos-latest
    needs: build-sdist
    env:
      RUST_ARCH: aarch64-apple-darwin
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          echo "CARGO_HOME=${HOME}/.cargo" >> $GITHUB_ENV
          echo "RUSTUP_HOME=${HOME}/.rustup" >> $GITHUB_ENV
          echo "${HOME}/.cargo/bin" >> $GITHUB_PATH

      - name: Install Rust
        run: ./tools/build/setup-rust.sh

      - name: Install snmpd
        run: ./tools/build/setup-snmpd.sh

      - name: Set up python
        uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==3.1.4

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp39-macosx_arm64 cp310-macosx_arm64 cp311-macosx_arm64 cp312-macosx_arm64 cp313-macosx_arm64"
          CIBW_ARCHS_MACOS: arm64
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "cd {project} && pytest tests"

      - name: Save Artefacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel-darwin-arm64
          path: wheelhouse/*.whl

  publish:
    runs-on: ubuntu-24.04
    environment: pypi
    permissions:
      id-token: write
    needs:
      - build-sdist
      - build-linux-amd64
      - build-linux-aarch64
      - build-darwin-arm64
    steps:
      - name: Download Artefacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Prepare dist/
        run: |
          mv dist/*/*.whl dist/
          mv dist/*/*.tar.gz dist/
          find dist/* -type d | xargs rm -r

      - name: Show Artefacts
        run: ls -lhR dist/

      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
